name: 'test: kind'
on:
  push:
jobs:
  integration-tests:
    runs-on: ubuntu-20.04
    concurrency:
      group: dev/integration-test:${{ github.head_ref }}
      cancel-in-progress: true
    env:
      KOCACHE: ~/.cache/ko-build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-${{ hashFiles('**/go.sum') }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/ko-build
          key: ko-${{ hashFiles('**/*.go') }}
          restore-keys: |
            ko-
      - run: |
          sudo apt update
          sudo apt install wait-for-it
          make kind
      - uses: imjasonh/setup-ko@v0.4
        env:
          KO_DOCKER_REPO: kind.local
      - run: ko publish ./
      - run: kubectl -n argocd wait deploy/argocd-repo-server --for condition=available --timeout 5m
        timeout-minutes: 5
      - run: brew install argocd
      - run: |
          kubectl config set-context --current --namespace=argocd
          argocd login --core
          argocd version
      - run: argocd app sync codedeploy
      - run: argocd app wait codedeploy --timeout 300
        timeout-minutes: 5
      - run: |
          kubectl -n default wait deploy/gitserver --for condition=available --timeout 5m
          kubectl -n kubegres-system wait deploy/kubegres-controller-manager --for condition=available --timeout 5m
        timeout-minutes: 5
      - run: |
          kubectl -n default wait pod/postgres-1-0 --for condition=Ready --timeout 5m
        timeout-minutes: 5
      - run: |
          ko resolve -f deploy/ci/backend.yaml | kubectl -n default apply -f -
      - run: |
          kubectl -n default wait deploy/codedeploy --for condition=available --timeout 5m
        timeout-minutes: 5
      - run: kubectl -n default port-forward svc/codedeploy 3000:3000 &
      - id: integration-tests
        run: make test
      - if: always()
        run: kubectl -n default logs deploy/codedeploy
      - if: always()
        run: kubectl -n argocd logs deploy/argocd-server
      - if: always()
        run: kubectl -n argocd logs deploy/argocd-repo-server
      - if: always()
        run: |
          sleep 1m
          argocd app list
          argocd app get userspace
          argocd app history userspace
          argocd app resources userspace
          argocd app manifests userspace
          kubectl get services --all-namespaces
          kubectl get deployments --all-namespaces
          kubectl get pods --all-namespaces
          kubectl get namespace
          kubectl api-resources --namespaced=false
          argocd app logs userspace
      - run: kubectl -n default port-forward svc/gitserver 9418 &
      - run: cd /tmp && git clone git://localhost/userspace
      - run: cd /tmp/userspace && kustomize build .
